package cfb8

import (
	"bytes"
	"testing"
)

var (
	ssecret = []byte{
		0x11, 0x22, 0x33, 0x44,
		0x13, 0x24, 0x14, 0x23,
		0xff, 0x00, 0x21, 0x13,
		0x37, 0xaf, 0xca, 0xfe,
	}
	message = []byte("hello world!")
)

var readWriteTests = []struct {
	in  []byte
	err error
}{
	{
		[]byte{},
		nil,
	},
	{
		[]byte{0xcb, 0x01, 0x01},
		nil,
	},
	{
		[]byte{
			0x01, 0x00, 0x00, 0x00, 0x21, 0x00, 0x07, 0x00,
			0x64, 0x00, 0x65, 0x00, 0x66, 0x00, 0x61, 0x00,
			0x75, 0x00, 0x6c, 0x00, 0x74, 0x01, 0x00, 0x02,
			0x00, 0x20, 0xcd,
		},
		nil,
	},
}

func TestReadWrite(t *testing.T) {
	var buf bytes.Buffer
	brw := New(&buf, ssecret)

	for index, tt := range readWriteTests {
		brw.Write(tt.in)
		var p = make([]byte, len(tt.in))
		brw.Read(p)

		if !bytes.Equal(tt.in, p) {
			t.Fatalf("%d. Got %x expected %x.", index, p, tt.in)
		}
	}
}
